Logging Provider: org.jboss.logging.Slf4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@1a531422
Adding type registration boolean -> org.hibernate.type.BooleanType@1a531422
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a531422
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2d28fb02
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3dbd7107
Adding type registration yes_no -> org.hibernate.type.YesNoType@70b6db83
Adding type registration byte -> org.hibernate.type.ByteType@be164d8
Adding type registration byte -> org.hibernate.type.ByteType@be164d8
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@be164d8
Adding type registration character -> org.hibernate.type.CharacterType@586495f1
Adding type registration char -> org.hibernate.type.CharacterType@586495f1
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@586495f1
Adding type registration short -> org.hibernate.type.ShortType@805e72e
Adding type registration short -> org.hibernate.type.ShortType@805e72e
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@805e72e
Adding type registration integer -> org.hibernate.type.IntegerType@51ff3c4b
Adding type registration int -> org.hibernate.type.IntegerType@51ff3c4b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@51ff3c4b
Adding type registration long -> org.hibernate.type.LongType@12fcb2c3
Adding type registration long -> org.hibernate.type.LongType@12fcb2c3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@12fcb2c3
Adding type registration float -> org.hibernate.type.FloatType@696b52bc
Adding type registration float -> org.hibernate.type.FloatType@696b52bc
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@696b52bc
Adding type registration double -> org.hibernate.type.DoubleType@19f02280
Adding type registration double -> org.hibernate.type.DoubleType@19f02280
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19f02280
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d2c345d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d2c345d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32507479
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32507479
Adding type registration string -> org.hibernate.type.StringType@6a98f353
Adding type registration java.lang.String -> org.hibernate.type.StringType@6a98f353
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3830b06c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c7e73c5
Adding type registration url -> org.hibernate.type.UrlType@42fc4ac4
Adding type registration java.net.URL -> org.hibernate.type.UrlType@42fc4ac4
Adding type registration date -> org.hibernate.type.DateType@280fafd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@280fafd
Adding type registration time -> org.hibernate.type.TimeType@626b639e
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@626b639e
Adding type registration timestamp -> org.hibernate.type.TimestampType@679d0be8
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@679d0be8
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@679d0be8
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8fcc534
Adding type registration calendar -> org.hibernate.type.CalendarType@33d7765a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33d7765a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33d7765a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@551be9f6
Adding type registration locale -> org.hibernate.type.LocaleType@44bc2449
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44bc2449
Adding type registration currency -> org.hibernate.type.CurrencyType@26457986
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@26457986
Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c742b84
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c742b84
Adding type registration class -> org.hibernate.type.ClassType@26e0d39c
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26e0d39c
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79ecc507
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79ecc507
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41def031
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5aa76ad2
Adding type registration binary -> org.hibernate.type.BinaryType@1b52699c
Adding type registration byte[] -> org.hibernate.type.BinaryType@1b52699c
Adding type registration [B -> org.hibernate.type.BinaryType@1b52699c
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3db65c0d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3db65c0d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3db65c0d
Adding type registration image -> org.hibernate.type.ImageType@8c0a23f
Adding type registration characters -> org.hibernate.type.CharArrayType@45801322
Adding type registration char[] -> org.hibernate.type.CharArrayType@45801322
Adding type registration [C -> org.hibernate.type.CharArrayType@45801322
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11c88cca
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11c88cca
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11c88cca
Adding type registration text -> org.hibernate.type.TextType@2fd1ad8a
Adding type registration ntext -> org.hibernate.type.NTextType@de579ff
Adding type registration blob -> org.hibernate.type.BlobType@111c229c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@111c229c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@58b311ba
Adding type registration clob -> org.hibernate.type.ClobType@4168f3d9
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4168f3d9
Adding type registration nclob -> org.hibernate.type.NClobType@73f6e07
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@73f6e07
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3d3c886f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2bab618
Adding type registration serializable -> org.hibernate.type.SerializableType@299b9851
Adding type registration object -> org.hibernate.type.ObjectType@52a7928a
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52a7928a
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@29d25e65
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19b75b2b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59c43561
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@634f58d2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@585513a8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b18658a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30f28b5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a1f79ce
HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
HHH000412: Hibernate Core {4.3.3.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
Database ->
       name : MySQL
    version : 8.0.30
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.31 (Revision: 0c86fc148d567b62266c2302bdad0f1e7a7e4eba)
      major : 8
      minor : 0
JDBC version : 4.2
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.bean.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity com.bean.Employee on table EMPLOYEESPRINGORM
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEESPRINGORM), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.bean.Employee:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEESPRINGORM), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.bean.Employee:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEESPRINGORM), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.bean.Employee:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEESPRINGORM), mappingColumn=salary, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property salary with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.bean.Employee:salary]
building SimpleValue for salary
Building property salary
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for salary
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.arch.data.model=64, java.vendor.url=https://openjdk.java.net/, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.15.1\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 52186 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.ServiceTest.EmployeeServiceTest, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-22, java.home=C:\Program Files\Java\jdk-11.0.15.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.15.1+2-LTS-10, user.name=user, hibernate.classLoader.application=jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a, file.encoding=Cp1252, java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.io.tmpdir=C:\Users\user\AppData\Local\Temp\, java.version=11.0.15.1, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, java.library.path=C:\Program Files\Java\jdk-11.0.15.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk-11.0.15.1\bin;C:\oraclexe\app\oracle\product\11.2.0;C:\Users\user\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\user\git\Spring-FrameWork\09SpringOrmHibernateTemplet\target\test-classes;C:\Users\user\git\Spring-FrameWork\09SpringOrmHibernateTemplet\target\classes;C:\Users\user\.m2\repository\org\springframework\spring-core\4.3.30.RELEASE\spring-core-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\user\.m2\repository\org\springframework\spring-context\4.3.30.RELEASE\spring-context-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-aop\4.3.30.RELEASE\spring-aop-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-beans\4.3.30.RELEASE\spring-beans-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-expression\4.3.30.RELEASE\spring-expression-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-orm\4.3.30.RELEASE\spring-orm-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-jdbc\4.3.30.RELEASE\spring-jdbc-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\springframework\spring-tx\4.3.30.RELEASE\spring-tx-4.3.30.RELEASE.jar;C:\Users\user\.m2\repository\org\hibernate\hibernate-core\4.3.3.Final\hibernate-core-4.3.3.Final.jar;C:\Users\user\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\user\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\user\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\user\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\user\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\user\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\user\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\user\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\user\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\user\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\user\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\user\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\user\.m2\repository\com\mysql\mysql-connector-j\8.0.31\mysql-connector-j-8.0.31.jar;C:\Users\user\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\user\.m2\repository\ch\qos\logback\logback-classic\1.4.2\logback-classic-1.4.2.jar;C:\Users\user\.m2\repository\ch\qos\logback\logback-core\1.4.2\logback-core-1.4.2.jar;C:\Users\user\.m2\repository\org\slf4j\slf4j-api\2.0.1\slf4j-api-2.0.1.jar;C:\Users\user\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\user\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\Copy WorkSpace\spring-tool-suite-4-4.5.1.RELEASE-e4.13.0-win32.win32.x86_64 (1)\sts-4.5.1.RELEASE\configuration\org.eclipse.osgi\242\0\.cp;D:\Copy WorkSpace\spring-tool-suite-4-4.5.1.RELEASE-e4.13.0-win32.win32.x86_64 (1)\sts-4.5.1.RELEASE\configuration\org.eclipse.osgi\241\0\.cp, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.cpu.endian=little, user.home=C:\Users\user, user.language=en, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, user.dir=C:\Users\user\git\Spring-FrameWork\09SpringOrmHibernateTemplet, os.arch=amd64, java.vm.info=mixed mode, java.vm.version=11.0.15.1+2-LTS-10, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@4b88ca8e, java.class.version=55.0}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.bean.Employee
 Version select: select id from EMPLOYEESPRINGORM where id =?
 Snapshot select: select employee_.id, employee_.email as email2_0_, employee_.name as name3_0_, employee_.salary as salary4_0_ from EMPLOYEESPRINGORM employee_ where employee_.id=?
 Insert 0: insert into EMPLOYEESPRINGORM (email, name, salary, id) values (?, ?, ?, ?)
 Update 0: update EMPLOYEESPRINGORM set email=?, name=?, salary=? where id=?
 Delete 0: delete from EMPLOYEESPRINGORM where id=?
 Identity insert: insert into EMPLOYEESPRINGORM (email, name, salary) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70439c3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [NONE]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59a5bb61]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [READ]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749f61a3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [UPGRADE]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42dd7d82]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [UPGRADE_NOWAIT]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb5d334]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [UPGRADE_SKIPLOCKED]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d459bda]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [FORCE]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d664323]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [PESSIMISTIC_READ]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2676d96a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [PESSIMISTIC_WRITE]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da646b8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a48c398]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [OPTIMISTIC]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4407b042]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : salary
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.bean.Employee)
    - Returns
       - EntityReturnImpl(entity=com.bean.Employee, querySpaceUid=<gen:0>, path=com.bean.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bean.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.bean.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Static select for action ACTION_MERGE on entity com.bean.Employee: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Static select for action ACTION_REFRESH on entity com.bean.Employee: select employee0_.id as id1_0_0_, employee0_.email as email2_0_0_, employee0_.name as name3_0_0_, employee0_.salary as salary4_0_0_ from EMPLOYEESPRINGORM employee0_ where employee0_.id=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6eaf030c
Registering SessionFactory: 883b5af7-5b36-4a26-a7b8-c10292be48b8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
HHH000261: Table found: jdbcdemo.employeespringorm
HHH000037: Columns: [name, id, salary, email]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
